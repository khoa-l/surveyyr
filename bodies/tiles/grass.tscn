[gd_scene load_steps=12 format=3 uid="uid://bstytgjr2sejw"]

[ext_resource type="PackedScene" uid="uid://blvypnmdghkp8" path="res://bodies/tiles/hex_grass.gltf" id="1_y6meh"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_xwpb8"]
albedo_color = Color(0.0333333, 0.5, 0, 1)

[sub_resource type="GDScript" id="GDScript_svmfq"]
script/source = "extends Node3D
#
#@export var MIN_TREES := 0
#@export var MIN_TREES := 0
#@export var MAX_TREES := 4
#@export var MIN_SCALE := 0.25
#@export var MAX_SCALE := 0.50
#@export var PLACEMENT_DIAMETER := 1.65
#@export var MIN_TREE_SPACING := 0.25  # Minimum distance between tree centers
#@export var TREE_DISTRIBUTION_CURVE: Curve  # Curve to control tree number distribution
#
#var placed_trees := []
#
#func _ready() -> void:
	#place_trees()
#
#func place_trees():
	#var num_trees = get_tree_count()
	#var attempts = 0
	#var max_attempts = 100  # Prevent infinite loops
	#
	#while len(placed_trees) < num_trees and attempts < max_attempts:
		#var pos = get_random_position()
		#if is_valid_placement(pos):
			#place_tree(pos)
		#attempts += 1
#
#func get_tree_count() -> int:
	#if TREE_DISTRIBUTION_CURVE:
		#var t = randf()  # Random value between 0 and 1
		#var distribution = TREE_DISTRIBUTION_CURVE.sample(t)
		#return int(lerp(MIN_TREES, MAX_TREES, distribution))
	#else:
		#return randi_range(MIN_TREES, MAX_TREES)
#
#func is_valid_placement(pos: Vector3) -> bool:
	## Check if the position is within the placement diameter
	#if pos.length() > PLACEMENT_DIAMETER / 2:
		#return false
	#
	## Check minimum spacing from other trees
	#for tree in placed_trees:
		#if pos.distance_to(tree) < MIN_TREE_SPACING:
			#return false
	#return true
#
#func place_tree(pos: Vector3):
	#var tree = preload(\"res://bodies/tile/tree.tscn\").instantiate()
	#
	#var random_scale = randf_range(MIN_SCALE, MAX_SCALE)
	#tree.scale = Vector3(random_scale, random_scale, random_scale)
	#
	#var surface_normal = get_surface_normal(pos)
	#var aligned_basis = align_up(tree.transform.basis, surface_normal)
	#
	#tree.transform = Transform3D(aligned_basis, pos)
	#
	#add_child(tree)
	#placed_trees.append(pos)
#
#func get_random_position() -> Vector3:
	#var radius = PLACEMENT_DIAMETER / 2
	#var angle = randf() * TAU  # Random angle in radians
	#var distance = sqrt(randf()) * radius  # Square root for uniform distribution
	#var x = cos(angle) * distance
	#var z = sin(angle) * distance
	#return Vector3(x, 0, z)
#
#func align_up(node_basis: Basis, normal: Vector3) -> Basis:
	#var result = Basis()
	#var size = node_basis.get_scale()
	#result.x = normal.cross(node_basis.z).normalized()
	#result.y = normal
	#result.z = result.x.cross(normal).normalized()
	#result = result.orthonormalized()
	#result.x *= size.x 
	#result.y *= size.y 
	#result.z *= size.z 
	#return result
#
#func get_surface_normal(pos: Vector3) -> Vector3:
	#var space_state = get_world_3d().direct_space_state
	#var query = PhysicsRayQueryParameters3D.create(pos + Vector3.UP * 50, pos + Vector3.DOWN * 50)
	#var result = space_state.intersect_ray(query)
	#if result:
		#return result.normal
	#return Vector3.UP
"

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_nu211"]
data = PackedVector3Array(0, -0.05, -1.1547, -1, -1, -0.5773, 0, -1, -1.1547, 0, -0.05, -1.1547, -1, -0.05, -0.5773, -1, -1, -0.5773, 1, -0.05, 0.5774, 1, -1, -0.5773, 1, -1, 0.5774, 1, -0.05, 0.5774, 1, -0.05, -0.5773, 1, -1, -0.5773, -1, -0.05, -0.5773, -1, -1, 0.5773, -1, -1, -0.5773, -1, -0.05, -0.5773, -1, -0.05, 0.5773, -1, -1, 0.5773, 0, -0.05, 1.1547, 1, -1, 0.5774, 0, -1, 1.1547, 0, -0.05, 1.1547, 1, -0.05, 0.5774, 1, -1, 0.5774, -1, -0.05, 0.5773, 0, -1, 1.1547, -1, -1, 0.5773, -1, -0.05, 0.5773, 0, -0.05, 1.1547, 0, -1, 1.1547, 1, -0.05, -0.5773, 0, 0, -1.097, 0, -0.05, -1.1547, 1, -0.05, -0.5773, 0.95, 0, -0.5485, 0, 0, -1.097, 1, -0.05, 0.5774, 0.95, 0, -0.5485, 1, -0.05, -0.5773, 1, -0.05, 0.5774, 0.95, 0, 0.5485, 0.95, 0, -0.5485, 0, -0.05, 1.1547, 0.95, 0, 0.5485, 1, -0.05, 0.5774, 0, -0.05, 1.1547, 0, 0, 1.097, 0.95, 0, 0.5485, -1, -0.05, 0.5773, 0, 0, 1.097, 0, -0.05, 1.1547, -1, -0.05, 0.5773, -0.95, 0, 0.5485, 0, 0, 1.097, -1, -0.05, -0.5773, -0.95, 0, 0.5485, -1, -0.05, 0.5773, -1, -0.05, -0.5773, -0.95, 0, -0.5485, -0.95, 0, 0.5485, 0, -0.05, -1.1547, -0.95, 0, -0.5485, -1, -0.05, -0.5773, 0, -0.05, -1.1547, 0, 0, -1.097, -0.95, 0, -0.5485, 1, -0.05, -0.5773, 0, -1, -1.1547, 1, -1, -0.5773, 1, -0.05, -0.5773, 0, -0.05, -1.1547, 0, -1, -1.1547, 0, -1, 0, 1, -1, -0.5773, 0, -1, -1.1547, 0, -1, 0, 1, -1, 0.5774, 1, -1, -0.5773, 0, -1, 0, 0, -1, 1.1547, 1, -1, 0.5774, 0, -1, 0, -1, -1, 0.5773, 0, -1, 1.1547, 0, -1, 0, -1, -1, -0.5773, -1, -1, 0.5773, 0, -1, 0, 0, -1, -1.1547, -1, -1, -0.5773, 0, 0, 0, 0, 0, -1.097, 0.95, 0, -0.5485, 0, 0, 0, 0.95, 0, -0.5485, 0.95, 0, 0.5485, 0, 0, 0, 0.95, 0, 0.5485, 0, 0, 1.097, 0, 0, 0, 0, 0, 1.097, -0.95, 0, 0.5485, 0, 0, 0, -0.95, 0, 0.5485, -0.95, 0, -0.5485, 0, 0, 0, -0.95, 0, -0.5485, 0, 0, -1.097)

[sub_resource type="ArrayMesh" id="ArrayMesh_s7pi5"]
_surfaces = [{
"aabb": AABB(0, 0, -0.05, 1e-05, 0.5, 0.1),
"attribute_data": PackedByteArray(0, 0, 255, 255, 255, 127, 0, 0, 255, 255, 255, 255),
"format": 34896613399,
"index_count": 3,
"index_data": PackedByteArray(0, 0, 1, 0, 2, 0),
"name": "grass_straw_Plane",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 3,
"vertex_data": PackedByteArray(0, 0, 0, 0, 255, 255, 255, 191, 0, 0, 255, 255, 255, 127, 255, 191, 0, 0, 0, 0, 0, 0, 255, 191, 255, 127, 0, 0, 255, 127, 0, 0, 255, 127, 0, 0)
}]
blend_shape_mode = 0

[sub_resource type="MultiMesh" id="MultiMesh_uecgk"]
transform_format = 1
instance_count = 200
mesh = SubResource("ArrayMesh_s7pi5")
buffer = PackedFloat32Array(0.978699, 0, -0.210115, 0.825774, 6.26193e-09, 1.001, 2.91675e-08, 1, 0.210115, -2.98321e-08, 0.978699, -0.187311, -0.629326, 0, -0.778428, -0.138535, 0, 1.001, 0, 1, 0.778428, 0, -0.629326, -0.0916052, 0.988396, 0, 0.158349, 0.519098, -4.71917e-09, 1.001, 2.94565e-08, 1, -0.158349, -2.98321e-08, 0.988396, -0.00855863, 0.480672, 0, 0.878041, -0.584182, 0, 1.001, 0, 1, -0.878041, 0, 0.480672, -0.348238, -0.946782, 0, 0.32497, 0.828418, -9.68486e-09, 1.001, -2.82163e-08, 1, -0.32497, -2.98321e-08, -0.946782, 0.691659, 0.940905, 0, 0.341613, -0.922842, -2.03617e-08, 1.001, 5.60823e-08, 1, -0.341613, -5.96642e-08, 0.940905, -0.185615, -0.671253, 0, 0.742577, 0.163035, -2.21305e-08, 1.001, -2.00049e-08, 1, -0.742577, -2.98321e-08, -0.671253, 0.640669, 0.758326, 0, -0.653409, 0.154353, 3.89462e-08, 1.001, 4.51997e-08, 1, 0.653409, -5.96643e-08, 0.758326, -0.839854, -0.484883, 0, -0.875723, 0.913602, 5.21971e-08, 1.001, -2.89013e-08, 1, 0.875723, -5.96643e-08, -0.484883, -0.927561, 0.0661772, 0, -0.99881, 0.629598, 0, 1.001, 0, 1, 0.99881, 0, 0.0661772, -0.771368, -0.775307, 0, 0.633167, -0.979866, 0, 1.001, 0, 1, -0.633167, 0, -0.775307, 0.854965, -0.87804, 0, 0.480673, -0.488868, 0, 1.001, 0, 1, -0.480673, 0, -0.87804, 0.467322, 0.906793, 0, 0.423942, 0.84819, -1.26345e-08, 1.001, 2.70245e-08, 1, -0.423942, -2.98321e-08, 0.906793, 0.845125, 0.926558, 0, 0.378803, 0.749758, -1.12892e-08, 1.001, 2.76136e-08, 1, -0.378803, -2.98321e-08, 0.926558, -0.703002, 0.434806, 0, -0.901634, 0.907676, 2.68708e-08, 1.001, 1.29582e-08, 1, 0.901634, -2.98321e-08, 0.434806, 0.849257, 1.00031, 0, -0.0370577, -0.778244, 0, 1.001, 0, 1, 0.0370577, 0, 1.00031, 0.755657, 0.614277, 0, -0.790357, 0.0311221, 2.35545e-08, 1.001, 1.83069e-08, 1, 0.790357, -2.98321e-08, 0.614277, 0.561419, -0.404723, 0, 0.915533, 0.0484557, -2.7285e-08, 1.001, -1.20617e-08, 1, -0.915533, -2.98321e-08, -0.404723, 0.735217, 0.75774, 0, -0.654088, 0.793669, 1.94933e-08, 1.001, 2.25824e-08, 1, 0.654088, -2.98321e-08, 0.75774, 0.732657, -0.989074, 0, -0.154058, 0.287756, 4.59128e-09, 1.001, -2.94767e-08, 1, 0.154058, -2.98321e-08, -0.989074, 0.794031, 0.286029, 0, 0.959264, 0.949466, -2.85883e-08, 1.001, 8.52434e-09, 1, -0.959264, -2.98321e-08, 0.286029, -0.770352, 0.576379, 0, 0.818406, -0.0974158, -2.43904e-08, 1.001, 1.71774e-08, 1, -0.818406, -2.98321e-08, 0.576379, 0.21935, 0.102361, 0, -0.995753, -0.478994, 2.96757e-08, 1.001, 3.05058e-09, 1, 0.995753, -2.98321e-08, 0.102361, 0.610865, 0.582895, 0, 0.813778, -0.353583, 0, 1.001, 0, 1, -0.813778, 0, 0.582895, -0.966877, -0.833138, 0, 0.554871, 0.0765761, -1.65364e-08, 1.001, -2.48295e-08, 1, -0.554871, -2.98321e-08, -0.833138, 0.274341, -0.909991, 0, 0.417033, -0.00579381, -1.24286e-08, 1.001, -2.71199e-08, 1, -0.417033, -2.98321e-08, -0.909991, 0.408823, -0.3907, 0, -0.921605, 0.838543, 2.7466e-08, 1.001, -1.16438e-08, 1, 0.921605, -2.98321e-08, -0.3907, -0.369383, 0.716548, 0, -0.69897, -0.897655, 4.16619e-08, 1.001, 4.27096e-08, 1, 0.69897, -5.96643e-08, 0.716548, -0.868607, 0.967681, 0, 0.256113, -0.270833, -7.63276e-09, 1.001, 2.88392e-08, 1, -0.256113, -2.98321e-08, 0.967681, 0.677293, 0.994478, 0, -0.114079, 0.236297, 3.39981e-09, 1.001, 2.96378e-08, 1, 0.114079, -2.98321e-08, 0.994478, 0.64085, -0.351765, 0, 0.937157, -0.259946, 0, 1.001, 0, 1, -0.937157, 0, -0.351765, -0.177615, -0.0339483, 0, -1.00042, -0.262969, 0, 1.001, 0, 1, 1.00042, 0, -0.0339483, 0.053794, -0.0208146, 0, 1.00078, 0.917473, -2.98257e-08, 1.001, -6.20322e-10, 1, -1.00078, -2.98321e-08, -0.0208146, -0.573491, 0.639356, 0, -0.770211, 0.27943, 2.29541e-08, 1.001, 1.90543e-08, 1, 0.770211, -2.98321e-08, 0.639356, -0.223856, -0.0675219, 0, 0.99872, 0.215329, -2.97642e-08, 1.001, -2.01231e-09, 1, -0.99872, -2.98321e-08, -0.0675219, 0.0994415, 0.814036, 0, 0.582534, -0.520108, -1.73609e-08, 1.001, 2.42602e-08, 1, -0.582534, -2.98321e-08, 0.814036, 0.692719, 0.849746, 0, 0.529087, -0.97924, 0, 1.001, 0, 1, -0.529087, 0, 0.849746, 0.0271931, 0.866351, 0, -0.501435, -0.305804, 0, 1.001, 0, 1, 0.501435, 0, 0.866351, -0.521585, -0.780111, 0, 0.627239, 0.84431, -1.86932e-08, 1.001, -2.32491e-08, 1, -0.627239, -2.98321e-08, -0.780111, 0.621698, -0.335506, 0, 0.9431, -0.935121, 0, 1.001, 0, 1, -0.9431, 0, -0.335506, 0.712991, -0.639205, 0, 0.770336, 0.671261, 0, 1.001, 0, 1, -0.770336, 0, -0.639205, -0.677704, -0.988343, 0, -0.15868, 0.425103, 9.45807e-09, 1.001, -5.89098e-08, 1, 0.15868, -5.96643e-08, -0.988343, -0.922885, -0.0612642, 0, -0.999124, -0.339668, 0, 1.001, 0, 1, 0.999124, 0, -0.0612642, -0.715657, 0.947086, 0, -0.324082, -0.405543, 0, 1.001, 0, 1, 0.324082, 0, 0.947086, -0.478163, -0.790762, 0, -0.613756, 0.179341, 1.82913e-08, 1.001, -2.35665e-08, 1, 0.613756, -2.98321e-08, -0.790762, 0.736299, 0.779863, 0, -0.627547, 0.32206, 3.74047e-08, 1.001, 4.64834e-08, 1, 0.627547, -5.96643e-08, 0.779863, -0.764203, 0.64891, 0, 0.762179, -0.180047, -2.27147e-08, 1.001, 1.9339e-08, 1, -0.762179, -2.98321e-08, 0.64891, 0.46491, -0.882557, 0, 0.472328, -0.363564, -1.40765e-08, 1.001, -2.63023e-08, 1, -0.472328, -2.98321e-08, -0.882557, 0.755074, -0.887217, 0, -0.463516, 0.101, 1.38139e-08, 1.001, -2.64411e-08, 1, 0.463516, -2.98321e-08, -0.887217, 0.573895, 0.436601, 0, 0.900767, 0.92491, -2.68449e-08, 1.001, 1.30117e-08, 1, -0.900767, -2.98321e-08, 0.436601, 0.542577, 0.242181, 0, 0.971262, -0.234865, 0, 1.001, 0, 1, -0.971262, 0, 0.242181, -0.0494273, 0.976055, 0, -0.222077, 0.903972, 6.61842e-09, 1.001, 2.90887e-08, 1, 0.222077, -2.98321e-08, 0.976055, 0.972386, -0.975768, 0, -0.223332, -0.831844, 0, 1.001, 0, 1, 0.223332, 0, -0.975768, 0.730142, -0.999798, 0, -0.0490473, -0.66789, 0, 1.001, 0, 1, 0.0490473, 0, -0.999798, 0.624466, -0.865689, 0, 0.502578, 0.921076, -1.4978e-08, 1.001, -2.57995e-08, 1, -0.502578, -2.98321e-08, -0.865689, -0.13407, 0.840871, 0, 0.543081, -0.806319, -3.23702e-08, 1.001, 5.01198e-08, 1, -0.543081, -5.96642e-08, 0.840871, 0.00943935, 0.548422, 0, 0.837397, 0.675699, -2.49564e-08, 1.001, 1.63442e-08, 1, -0.837397, -2.98321e-08, 0.548422, 0.726828, 0.151867, 0, 0.989413, -0.235002, -2.94868e-08, 1.001, 4.526e-09, 1, -0.989413, -2.98321e-08, 0.151867, 0.297253, 0.966877, 0, -0.259135, -0.827753, 0, 1.001, 0, 1, 0.259135, 0, 0.966877, 0.808685, 0.423286, 0, 0.9071, -0.348603, -2.70337e-08, 1.001, 1.26149e-08, 1, -0.9071, -2.98321e-08, 0.423286, 0.546942, 0.813348, 0, -0.583495, 0.281213, 0, 1.001, 0, 1, 0.583495, 0, 0.813348, -0.95904, -0.268381, 0, -0.964351, -0.70924, 0, 1.001, 0, 1, 0.964351, 0, -0.268381, -0.0563416, 0.990803, 0, 0.142514, 0.593518, -4.24724e-09, 1.001, 2.95282e-08, 1, -0.142514, -2.98321e-08, 0.990803, 0.413957, 0.990355, 0, -0.145596, 0.129929, 0, 1.001, 0, 1, 0.145596, 0, 0.990355, -0.149732, 0.987169, 0, 0.165826, 0.23134, -4.942e-09, 1.001, 2.94199e-08, 1, -0.165826, -2.98321e-08, 0.987169, -0.0621302, 0.900523, 0, -0.437104, 0.704396, 1.30267e-08, 1.001, 2.68377e-08, 1, 0.437104, -2.98321e-08, 0.900523, 0.755392, 0.289446, 0, 0.958239, -0.381235, 0, 1.001, 0, 1, -0.958239, 0, 0.289446, -0.905805, -0.974435, 0, 0.229079, -0.901588, -1.36542e-08, 1.001, -5.80809e-08, 1, -0.229079, -5.96643e-08, -0.974435, -0.615491, -0.482029, 0, -0.877297, -0.441097, 0, 1.001, 0, 1, 0.877297, 0, -0.482029, 0.242409, -0.560694, 0, -0.82923, 0.305003, 2.4713e-08, 1.001, -1.671e-08, 1, 0.82923, -2.98321e-08, -0.560694, 0.163295, -0.790901, 0, 0.613577, -0.40491, 0, 1.001, 0, 1, -0.613577, 0, -0.790901, -0.657829, -0.432425, 0, 0.902779, 0.511566, -2.69049e-08, 1.001, -1.28873e-08, 1, -0.902779, -2.98321e-08, -0.432425, 0.242304, 0.811743, 0, -0.585726, -0.319802, 0, 1.001, 0, 1, 0.585726, 0, 0.811743, -0.150003, 0.959225, 0, -0.286163, -0.440323, 0, 1.001, 0, 1, 0.286163, 0, 0.959225, -0.228211, 0.379811, 0, -0.926145, -0.923643, 5.52026e-08, 1.001, 2.26385e-08, 1, 0.926145, -5.96642e-08, 0.379811, -0.141016, 0.824793, 0, 0.567202, 0.195684, -3.38079e-08, 1.001, 4.91615e-08, 1, -0.567202, -5.96642e-08, 0.824793, -0.558831, 0.448709, 0, -0.894797, 0.209903, 2.6667e-08, 1.001, 1.33726e-08, 1, 0.894797, -2.98321e-08, 0.448709, 0.389965, 1.00031, 0, 0.037156, -0.466492, 0, 1.001, 0, 1, -0.037156, 0, 1.00031, 0.180278, -0.275508, 0, 0.962339, 0.220924, -2.86799e-08, 1.001, -8.21077e-09, 1, -0.962339, -2.98321e-08, -0.275508, -0.145769, -0.979025, 0, 0.208592, 0.876784, -6.21654e-09, 1.001, -2.91772e-08, 1, -0.208592, -2.98321e-08, -0.979025, -0.699927, 0.335427, 0, -0.943128, -0.604935, 2.81074e-08, 1.001, 9.9965e-09, 1, 0.943128, -2.98321e-08, 0.335427, 0.895489, 0.85265, 0, 0.524394, 0.0722763, -1.56281e-08, 1.001, 2.5411e-08, 1, -0.524394, -2.98321e-08, 0.85265, 0.448607, 0.475847, 0, -0.880665, -0.403645, 0, 1.001, 0, 1, 0.880665, 0, 0.475847, 0.284878, 0.937098, 0, -0.35192, -0.0388317, 1.0488e-08, 1.001, 2.79277e-08, 1, 0.35192, -2.98321e-08, 0.937098, 0.767531, -0.949426, 0, 0.31716, -0.66442, -9.4521e-09, 1.001, -2.82951e-08, 1, -0.31716, -2.98321e-08, -0.949426, 0.90017, 0.345622, 0, -0.939439, 0.923246, 2.79975e-08, 1.001, 1.03003e-08, 1, 0.939439, -2.98321e-08, 0.345622, -0.343707, 0.98999, 0, 0.148059, -0.297123, 0, 1.001, 0, 1, -0.148059, 0, 0.98999, 0.0751359, 0.999143, 0, 0.0609522, -0.604456, 0, 1.001, 0, 1, -0.0609522, 0, 0.999143, 0.590358, -0.702672, 0, 0.712919, -0.786413, 0, 1.001, 0, 1, -0.712919, 0, -0.702672, 0.331725, 0.998124, 0, 0.0758273, -0.788426, -4.51966e-09, 1.001, 5.94928e-08, 1, -0.0758273, -5.96643e-08, 0.998124, -0.20045, 0.151389, 0, 0.989486, 0.0822092, -2.9489e-08, 1.001, 4.51174e-09, 1, -0.989486, -2.98321e-08, 0.151389, 0.539806, 1.00058, 0, -0.0288527, 0.514117, 8.59877e-10, 1.001, 2.98197e-08, 1, 0.0288527, -2.98321e-08, 1.00058, 0.136437, 0.85927, 0, 0.513475, -0.774889, -3.06055e-08, 1.001, 5.12165e-08, 1, -0.513475, -5.96643e-08, 0.85927, -0.0485244, -0.70952, 0, 0.706104, 0.186353, -4.20871e-08, 1.001, -4.22907e-08, 1, -0.706104, -5.96643e-08, -0.70952, -0.877315, 0.529186, 0, -0.849684, -0.202857, 0, 1.001, 0, 1, 0.849684, 0, 0.529186, -0.725666, -0.68359, 0, 0.731236, 0.797427, 0, 1.001, 0, 1, -0.731236, 0, -0.68359, -0.87371, -0.927235, 0, 0.377141, 0.44179, -1.12397e-08, 1.001, -2.76338e-08, 1, -0.377141, -2.98321e-08, -0.927235, 0.580218, -0.631775, 0, 0.776441, -0.0407616, 0, 1.001, 0, 1, -0.776441, 0, -0.631775, -0.222282, -0.300347, 0, 0.954879, 0.82214, -2.84576e-08, 1.001, -8.95103e-09, 1, -0.954879, -2.98321e-08, -0.300347, -0.36835, 0.858974, 0, -0.513969, -0.698697, 3.06349e-08, 1.001, 5.11989e-08, 1, 0.513969, -5.96643e-08, 0.858974, 0.148047, -0.979595, 0, 0.205901, 0.477576, 0, 1.001, 0, 1, -0.205901, 0, -0.979595, -0.900916, -0.107112, 0, -0.995253, 0.0566722, 2.96608e-08, 1.001, -3.19219e-09, 1, 0.995253, -2.98321e-08, -0.107112, 0.605968, -0.750574, 0, 0.662299, -0.186698, 0, 1.001, 0, 1, -0.662299, 0, -0.750574, -0.17659, 0.945818, 0, 0.327763, -0.585988, 0, 1.001, 0, 1, -0.327763, 0, 0.945818, 0.410484, 0.0292695, 0, -1.00057, -0.527639, 0, 1.001, 0, 1, 1.00057, 0, 0.0292695, 0.234003, 0.81656, 0, 0.578991, 0.694204, -1.72553e-08, 1.001, 2.43354e-08, 1, -0.578991, -2.98321e-08, 0.81656, -0.493266, -0.43575, 0, 0.901179, -0.989429, -5.37144e-08, 1.001, -2.59727e-08, 1, -0.901179, -5.96643e-08, -0.43575, -0.821185, 0.447087, 0, -0.895609, 0.404682, 2.66912e-08, 1.001, 1.33242e-08, 1, 0.895609, -2.98321e-08, 0.447087, -0.0033164, 0.981373, 0, -0.197253, -0.917536, 1.17572e-08, 1.001, 5.84944e-08, 1, 0.197253, -5.96642e-08, 0.981373, -0.147131, -0.957867, 0, -0.290674, 0.111391, 1.73255e-08, 1.001, -5.70933e-08, 1, 0.290674, -5.96643e-08, -0.957867, -0.398568, 0.244113, 0, -0.970778, 0.63987, 2.89314e-08, 1.001, 7.27512e-09, 1, 0.970778, -2.98321e-08, 0.244113, 0.885493, 0.728783, 0, 0.686204, 0.956038, -2.04505e-08, 1.001, 2.17194e-08, 1, -0.686204, -2.98321e-08, 0.728783, -0.371516, -0.986526, 0, 0.169609, 0.747665, -5.05474e-09, 1.001, -2.94008e-08, 1, -0.169609, -2.98321e-08, -0.986526, 0.755281, 0.988845, 0, -0.155519, -0.139242, 0, 1.001, 0, 1, 0.155519, 0, 0.988845, -0.567263, -0.831531, 0, -0.557276, 0.68364, 1.66081e-08, 1.001, -2.47816e-08, 1, 0.557276, -2.98321e-08, -0.831531, -0.19199, 0.133523, 0, -0.992055, -0.313652, 0, 1.001, 0, 1, 0.992055, 0, 0.133523, -0.724773, -0.966644, 0, 0.26, -0.247296, -7.7486e-09, 1.001, -2.88082e-08, 1, -0.26, -2.98321e-08, -0.966644, 0.437517, 0.96715, 0, 0.258113, -0.573274, -1.53847e-08, 1.001, 5.76466e-08, 1, -0.258113, -5.96643e-08, 0.96715, -0.923172, -0.317069, 0, -0.949457, -0.085551, 2.8296e-08, 1.001, -9.4494e-09, 1, 0.949457, -2.98321e-08, -0.317069, 0.203187, 0.881592, 0, 0.474128, -0.241181, -1.41301e-08, 1.001, 2.62735e-08, 1, -0.474128, -2.98321e-08, 0.881592, 0.612943, 0.907458, 0, -0.422518, 0.631116, 1.2592e-08, 1.001, 2.70444e-08, 1, 0.422518, -2.98321e-08, 0.907458, 0.681463, 0.396325, 0, 0.919199, -0.421253, -2.73943e-08, 1.001, 1.18114e-08, 1, -0.919199, -2.98321e-08, 0.396325, 0.487191, -0.0497503, 0, 0.999763, 0.346539, -5.95905e-08, 1.001, -2.96535e-09, 1, -0.999763, -5.96643e-08, -0.0497503, -0.957325, -0.71426, 0, -0.701309, 0.359774, 0, 1.001, 0, 1, 0.701309, 0, -0.71426, -0.462505, 0.583145, 0, -0.813599, 0.784707, 2.42471e-08, 1.001, 1.73791e-08, 1, 0.813599, -2.98321e-08, 0.583145, -0.122054, -0.954919, 0, 0.300217, 0.241021, -1.78943e-08, 1.001, -5.69176e-08, 1, -0.300217, -5.96643e-08, -0.954919, -0.818531, -0.546528, 0, -0.838635, 0.749067, 2.49933e-08, 1.001, -1.62878e-08, 1, 0.838635, -2.98321e-08, -0.546528, 0.586246, 0.983297, 0, 0.187426, 0.269109, -5.58573e-09, 1.001, 2.93045e-08, 1, -0.187426, -2.98321e-08, 0.983297, 0.212079, -0.909784, 0, 0.417486, -0.170926, -1.2442e-08, 1.001, -2.71137e-08, 1, -0.417486, -2.98321e-08, -0.909784, 0.68877, -0.541717, 0, 0.84175, -0.455484, -2.50861e-08, 1.001, -1.61444e-08, 1, -0.84175, -2.98321e-08, -0.541717, 0.517792, 0.64386, 0, -0.76645, -0.887486, 4.5684e-08, 1.001, 3.8377e-08, 1, 0.76645, -5.96643e-08, 0.64386, -0.346341, -0.876449, 0, 0.483569, -0.0817252, -1.44115e-08, 1.001, -2.61202e-08, 1, -0.483569, -2.98321e-08, -0.876449, 0.705789, -0.896226, 0, 0.445848, -0.249797, 0, 1.001, 0, 1, -0.445848, 0, -0.896226, -0.848296, -0.81858, 0, 0.576132, 0.969547, -1.71701e-08, 1.001, -2.43956e-08, 1, -0.576132, -2.98321e-08, -0.81858, 0.509575, -0.970956, 0, 0.243402, -0.118484, 0, 1.001, 0, 1, -0.243402, 0, -0.970956, -0.429823, -0.998901, 0, -0.064795, 0.695523, 1.93104e-09, 1.001, -2.97696e-08, 1, 0.064795, -2.98321e-08, -0.998901, -0.0124138, 0.8249, 0, -0.567045, 0.88178, 1.68993e-08, 1.001, 2.45839e-08, 1, 0.567045, -2.98321e-08, 0.8249, -0.50027, 0.839095, 0, -0.545822, 0.423484, 3.25335e-08, 1.001, 5.00139e-08, 1, 0.545822, -5.96643e-08, 0.839095, -0.87376, -0.969539, 0, 0.248988, -0.219683, 0, 1.001, 0, 1, -0.248988, 0, -0.969539, 0.0982808, -0.427464, 0, 0.905138, 0.487495, 0, 1.001, 0, 1, -0.905138, 0, -0.427464, -0.556224, -0.643803, 0, 0.766498, -0.251647, -2.28434e-08, 1.001, -1.91868e-08, 1, -0.766498, -2.98321e-08, -0.643803, 0.336829, 0.2797, 0, -0.961129, 0.328912, 2.86439e-08, 1.001, 8.33571e-09, 1, 0.961129, -2.98321e-08, 0.2797, -0.185098, 0.985589, 0, -0.174974, 0.361686, 5.21464e-09, 1.001, 2.93728e-08, 1, 0.174974, -2.98321e-08, 0.985589, 0.817731, 0.781037, 0, -0.626085, -0.253497, 1.86588e-08, 1.001, 2.32767e-08, 1, 0.626085, -2.98321e-08, 0.781037, 0.870087, 0.995229, 0, -0.107333, -0.859896, 0, 1.001, 0, 1, 0.107333, 0, 0.995229, 0.799508, -0.987675, 0, -0.162784, -0.844326, 9.70271e-09, 1.001, -5.887e-08, 1, 0.162784, -5.96643e-08, -0.987675, -0.583759, -0.999399, 0, -0.0565941, 0.577747, 1.68664e-09, 1.001, -2.97844e-08, 1, 0.0565941, -2.98321e-08, -0.999399, -0.0763429, -0.593209, 0, -0.806291, 0.505061, 2.40293e-08, 1.001, -1.7679e-08, 1, 0.806291, -2.98321e-08, -0.593209, -0.323922, 0.592837, 0, -0.806564, -0.376924, 2.40375e-08, 1.001, 1.76679e-08, 1, 0.806564, -2.98321e-08, 0.592837, 0.86868, -0.285593, 0, -0.959394, -0.222896, 0, 1.001, 0, 1, 0.959394, 0, -0.285593, -0.752975, 0.722158, 0, 0.693173, -0.728981, -4.13163e-08, 1.001, 4.3044e-08, 1, -0.693173, -5.96642e-08, 0.722158, -0.657725, 0.0519623, 0, 0.99965, -0.72189, 0, 1.001, 0, 1, -0.99965, 0, 0.0519623, -0.173178, 1.00099, 0, 0.00431553, -0.303527, 0, 1.001, 0, 1, -0.00431553, 0, 1.00099, -0.161298, -0.975005, 0, 0.226641, -0.885398, -6.75444e-09, 1.001, -2.90574e-08, 1, -0.226641, -2.98321e-08, -0.975005, 0.979086, -0.995163, 0, 0.107942, 0.0156215, 0, 1.001, 0, 1, -0.107942, 0, -0.995163, -0.923385, -0.648879, 0, 0.762206, 0.755259, -2.27155e-08, 1.001, -1.93381e-08, 1, -0.762206, -2.98321e-08, -0.648879, 0.597496, 0.65073, 0, -0.760626, -0.10843, 0, 1.001, 0, 1, 0.760626, 0, 0.65073, -0.407913, 0.541816, 0, -0.841687, -0.311342, 0, 1.001, 0, 1, 0.841687, 0, 0.541816, 0.00971115, 0.6499, 0, -0.761335, 0.425769, 2.26896e-08, 1.001, 1.93685e-08, 1, 0.761335, -2.98321e-08, 0.6499, 0.209329, -0.99059, 0, 0.14399, 0.527008, -4.29125e-09, 1.001, -2.95219e-08, 1, -0.14399, -2.98321e-08, -0.99059, 0.249108, 0.550321, 0, -0.836151, 0.960471, 2.49192e-08, 1.001, 1.64008e-08, 1, 0.836151, -2.98321e-08, 0.550321, -0.599557, -0.575117, 0, 0.819293, 0.0100722, -2.44168e-08, 1.001, -1.71398e-08, 1, -0.819293, -2.98321e-08, -0.575117, 0.0826726, 0.814855, 0, 0.581388, 0.266233, -1.73267e-08, 1.001, 2.42846e-08, 1, -0.581388, -2.98321e-08, 0.814855, -0.00954163, 0.50429, 0, -0.864692, -0.99942, 5.15397e-08, 1.001, 3.00581e-08, 1, 0.864692, -5.96643e-08, 0.50429, 0.481344, 0.62246, 0, 0.783929, 0.523577, -2.33629e-08, 1.001, 1.85508e-08, 1, -0.783929, -2.98321e-08, 0.62246, 0.93073, 0.306299, 0, -0.952986, 0.56492, 5.68024e-08, 1.001, 1.82568e-08, 1, 0.952986, -5.96642e-08, 0.306299, -0.632022, -0.174057, 0, -0.985751, -0.106562, 0, 1.001, 0, 1, 0.985751, 0, -0.174057, -0.907318, -0.512976, 0, -0.859568, -0.862368, 5.12342e-08, 1.001, -3.05758e-08, 1, 0.859568, -5.96643e-08, -0.512976, -0.117559, 0.155817, 0, -0.988798, -0.259385, 0, 1.001, 0, 1, 0.988798, 0, 0.155817, -0.416825, 0.748244, 0, 0.66493, 0.607881, -1.98164e-08, 1.001, 2.22994e-08, 1, -0.66493, -2.98321e-08, 0.748244, -0.500841, -0.771472, 0, -0.637834, -0.623821, 0, 1.001, 0, 1, 0.637834, 0, -0.771472, 0.365247, -0.107918, 0, 0.995166, -0.655881, 0, 1.001, 0, 1, -0.995166, 0, -0.107918, 0.217849, -0.787857, 0, -0.61748, -0.145262, 0, 1.001, 0, 1, 0.61748, 0, -0.787857, -0.228102, 0.912305, 0, 0.411947, -0.614302, -2.4554e-08, 1.001, 5.43776e-08, 1, -0.411947, -5.96642e-08, 0.912305, -0.997899, 0.995372, 0, -0.105998, 0.699331, 3.15899e-09, 1.001, 2.96644e-08, 1, 0.105998, -2.98321e-08, 0.995372, 0.512122, -0.554596, 0, -0.833321, -0.726562, 4.96698e-08, 1.001, -3.30565e-08, 1, 0.833321, -5.96643e-08, -0.554596, -0.443559, -0.949524, 0, -0.316868, -0.237647, 0, 1.001, 0, 1, 0.316868, 0, -0.949524, 0.134728, -0.17264, 0, -0.986, -0.993171, 0, 1.001, 0, 1, 0.986, 0, -0.17264, 0.562185, -0.74436, 0, 0.669276, -0.156627, -1.9946e-08, 1.001, -2.21836e-08, 1, -0.669276, -2.98321e-08, -0.74436, 0.977015, -0.972274, 0, -0.238087, 0.177998, 7.09553e-09, 1.001, -2.8976e-08, 1, 0.238087, -2.98321e-08, -0.972274, 0.0650072, 0.784643, 0, -0.62156, 0.250468, 1.85239e-08, 1.001, 2.33842e-08, 1, 0.62156, -2.98321e-08, 0.784643, 0.799396, -0.440034, 0, -0.899095, 0.747266, 2.67951e-08, 1.001, -1.3114e-08, 1, 0.899095, -2.98321e-08, -0.440034, -0.00312641, 0.569645, 0, -0.823107, -0.941325, 4.9061e-08, 1.001, 3.39535e-08, 1, 0.823107, -5.96643e-08, 0.569645, -0.311157, -0.534137, 0, 0.846581, -0.410708, 0, 1.001, 0, 1, -0.846581, 0, -0.534137, -0.916488, -0.355502, 0, -0.935745, -0.0748073, 2.78874e-08, 1.001, -1.05948e-08, 1, 0.935745, -2.98321e-08, -0.355502, 0.761844, -0.932474, 0, -0.363996, -0.869283, 2.16959e-08, 1.001, -5.55798e-08, 1, 0.363996, -5.96643e-08, -0.932474, -0.210873, 0.130415, 0, -0.992468, -0.030739, 2.95779e-08, 1.001, 3.88668e-09, 1, 0.992468, -2.98321e-08, 0.130415, 0.820545, 0.837503, 0, 0.548261, 0.498581, -1.63394e-08, 1.001, 2.49595e-08, 1, -0.548261, -2.98321e-08, 0.837503, 0.33944, -0.256712, 0, 0.967523, 0.303089, -2.88344e-08, 1.001, -7.65062e-09, 1, -0.967523, -2.98321e-08, -0.256712, 0.712594, 0.140679, 0, 0.991065, 0.60743, -2.9536e-08, 1.001, 4.19256e-09, 1, -0.991065, -2.98321e-08, 0.140679, -0.200678, -0.0234404, 0, 1.00073, -0.969937, 0, 1.001, 0, 1, -1.00073, 0, -0.0234404, 0.74019, 0.985799, 0, -0.173785, -0.892197, 0, 1.001, 0, 1, 0.173785, 0, 0.985799, 0.195296, -0.351509, 0, -0.937253, 0.887899, 2.79323e-08, 1.001, -1.04758e-08, 1, 0.937253, -2.98321e-08, -0.351509, -0.218023, 1.00063, 0, -0.0272328, 0.521378, 1.6232e-09, 1.001, 5.96422e-08, 1, 0.0272328, -5.96643e-08, 1.00063, -0.827811, -0.414489, 0, -0.911153, -0.0154411, 2.71545e-08, 1.001, -1.23527e-08, 1, 0.911153, -2.98321e-08, -0.414489, 0.802572, 0.715568, 0, -0.699974, -0.50641, 0, 1.001, 0, 1, 0.699974, 0, 0.715568, 0.501907, 0.965912, 0, 0.262706, -0.773115, -1.56585e-08, 1.001, 5.75729e-08, 1, -0.262706, -5.96643e-08, 0.965912, -0.280352, -0.178218, 0, -0.985007, 0.327718, 0, 1.001, 0, 1, 0.985007, 0, -0.178218, -0.81623, 0.0912359, 0, 0.996834, -0.441007, 0, 1.001, 0, 1, -0.996834, 0, 0.0912359, 0.138651, -0.00118088, 0, -1.001, 0.319918, 2.98321e-08, 1.001, -3.51929e-11, 1, 1.001, -2.98321e-08, -0.00118088, 0.458493)

[sub_resource type="Shader" id="Shader_ch08f"]
code = "shader_type spatial;
render_mode cull_disabled, diffuse_toon, specular_schlick_ggx;
// Nice Shader by @_Malido ^^

uniform vec3 top_color: source_color;
uniform vec3 bottom_color: source_color;
uniform float ambient_occlusion_factor: hint_range(0.0, 1.0, 0.01) = 0.3;
uniform float specular_strength: hint_range(0.0, 1.0, 0.01) = 0.4;
uniform float player_displacement_strength: hint_range(0.0, 1.0, 0.01) = 0.4;
uniform float player_displacement_size: hint_range(0.0, 2.0, 0.01) = 1.0;

uniform vec3 wind_direction; // Use a negative y component to give it an extra touch (For displacement effect and noise scroll direction)
uniform float wind_strength: hint_range(0.0, 1.0, 0.01) = 0.3;
uniform sampler2D wind_noise; // Periln FBM Noise looks Best
uniform float wind_noise_size: hint_range(0.0, 1.0, 0.001) = 0.05; // high values dont work well
uniform float wind_noise_speed: hint_range(0.0, 1.0, 0.001) = 0.1;

// Instance the Player Position through a GDScript in the _physics_process
instance uniform vec3 player_position;

void vertex() {
	vec3 world_position = (MODEL_MATRIX * vec4(VERTEX, 1.0)).xyz;

	vec3 wind_texture = texture(wind_noise, world_position.xz * wind_noise_size + normalize(-wind_direction.xz) * (TIME + UV.y / 2.5) * wind_noise_speed).rgb;
	vec3 wind_vector = (vec4(wind_texture * normalize(wind_direction) * wind_strength, 0.0) * MODEL_MATRIX).xyz;

	float player_height = smoothstep(1.0, 0.0, length(player_position.y - world_position.y + 0.3));
	vec3 push_direction = vec3(world_position - player_position) * vec3(1 , -0.3 ,1);
	float player_position_factor = smoothstep(player_displacement_size, 0.0, length(push_direction));

	vec3 player_push_vector = (vec4(normalize(push_direction), 0.0) * MODEL_MATRIX).xyz;

	// Apply Player Position displacement
	VERTEX += player_push_vector * (1.0 - UV.y) * player_position_factor * player_displacement_strength * player_height;
	// Apply Wind displacement linearly
	VERTEX += wind_vector * (1.0 - UV.y) * (1.0 - player_position_factor * 0.7);

	// A new normal correction, which aligns the normals of the mesh facing upwards no matter the original direction.
	NORMAL = vec3(0.0, 1.0, 0.0);
}

void fragment() {
	vec3 color = mix(bottom_color, top_color, 1.0 - UV.y);

	// Add fake ambient occlusion by darkening the base of the mesh
	float ao_fallof = pow(UV.y, 5.0);
	vec3 ao_color = bottom_color * (1.0 - ambient_occlusion_factor);

	ALBEDO = mix(color, ao_color, ao_fallof);
	ROUGHNESS = 0.4;

	// Increase the Specular with Grass Height
	SPECULAR *= (1.0 - UV.y) * specular_strength;

	// Just removing some funny shading
	if (!FRONT_FACING) {
		NORMAL = -NORMAL;
	}
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_rk8u2"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_pr2ga"]
noise = SubResource("FastNoiseLite_rk8u2")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_28b3j"]
render_priority = 0
shader = SubResource("Shader_ch08f")
shader_parameter/top_color = Color(0.113333, 0.4, 0, 1)
shader_parameter/bottom_color = Color(0.114667, 0.43, 0, 1)
shader_parameter/ambient_occlusion_factor = 0.3
shader_parameter/specular_strength = 0.4
shader_parameter/player_displacement_strength = 0.4
shader_parameter/player_displacement_size = 1.0
shader_parameter/wind_direction = Vector3(1, 1, 0)
shader_parameter/wind_strength = 0.3
shader_parameter/wind_noise_size = 0.05
shader_parameter/wind_noise_speed = 0.1
shader_parameter/wind_noise = SubResource("NoiseTexture2D_pr2ga")

[sub_resource type="QuadMesh" id="QuadMesh_sw1xj"]
size = Vector2(2, 2)

[node name="hex_grass2" instance=ExtResource("1_y6meh")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.000204325, 0.00167036, -0.00206304)

[node name="hex_grass" parent="." index="0"]
surface_material_override/0 = SubResource("StandardMaterial3D_xwpb8")
script = SubResource("GDScript_svmfq")

[node name="StaticBody3D" type="StaticBody3D" parent="hex_grass" index="0"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="hex_grass/StaticBody3D" index="0"]
shape = SubResource("ConcavePolygonShape3D_nu211")

[node name="MultiMeshInstance3D" type="MultiMeshInstance3D" parent="." index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.07674, 0)
visible = false
multimesh = SubResource("MultiMesh_uecgk")

[node name="GrassStraw" type="MeshInstance3D" parent="MultiMeshInstance3D" index="0"]
visible = false
mesh = SubResource("ArrayMesh_s7pi5")
skeleton = NodePath("../..")
surface_material_override/0 = SubResource("ShaderMaterial_28b3j")

[node name="MeshInstance3D" type="MeshInstance3D" parent="MultiMeshInstance3D" index="1"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 1, 0)
visible = false
mesh = SubResource("QuadMesh_sw1xj")
